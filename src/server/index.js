require('dotenv').config()
import express from 'express'
const app = express()
const PORT = process.env.PORT || 3002

import path from 'path'
import { ChunkExtractor } from '@loadable/server'

import React from 'react'
import { renderToString } from 'react-dom/server'
import { StaticRouter as Router } from 'react-router-dom'
import index from '../views'
import App from '../client/App'

app.use(express.json())
const staticFile = path.resolve(__dirname + '../../../public')
app.use(express.static(staticFile))

app.get('*', (req, res) => {
    // This is the stats file generated by webpack loadable plugin
    const statsFile = path.resolve(__dirname + '../../../public/loadable-stats.json')
    // We create an extractor from the statsFile
    const extractor = new ChunkExtractor({ statsFile })

    // Wrap your application using "collectChunks"
    const jsx = extractor.collectChunks(
        <Router
            location={req.url} 
            context={{}}
            >
            <App />
        </Router>
    )
    // Render your application
    const html = renderToString(jsx)
    // You can now collect your script tags
    const scriptTags = extractor.getScriptTags() // or extractor.getScriptElements();
    // You can also collect your "preload/prefetch" links
    const linkTags = extractor.getLinkTags() // or extractor.getLinkElements();
    // And you can even collect your style tags (if you use "mini-css-extract-plugin")
    const styleTags = extractor.getStyleTags() // or extractor.getStyleElements();
    const htmlString = index(html, linkTags, styleTags, scriptTags)
    res.send(htmlString)
})

app.listen(PORT, e => console.log("Server is listening on PORT:" + PORT))